@startuml
'https://plantuml.com/class-diagram

class Observer {
    - _name : string

    + Observer(name : string)
    + getName() : string
    + update(newState : string) : void
}

class Subject {
    - observers : vector<Observer>
    - state : string

    + Subject()
    + registerObserver(observer : Observer)
    + removeObserver(name : string) : void
    + changeInternalState(newState : string) : void
    - notifyObservers(nesState : string) : void
}

class Client {
    - observerGUI : Observer
    - observerDB : Observer
    - observerHW : Observer
    - eventEmitter : Subject
    + main() : int
}

Client --> Observer : observers created in Client;\nthen their ownership moves to the\nSubject's 'observers' member var
Client *--> "1\nsubject" Subject
Subject *--> "0..n\nobservers" Observer

@enduml

@startuml
'https://plantuml.com/sequence-diagram

'autonumber

boundary Client
entity user
entity admin
entity UserRole
control document
control states
entity StateType
control State
control initialState
control draft
control moderation
control published
control transition
entity TransitionType

group init
    Client -> UserRole : USER
    UserRole --> Client : USER
    Client -> user : User(USER)
    user --> Client : user

    Client -> document : Document(user)
    document -> document : _currentUser
    document -> states : States(document)

    states -> initialState : InitialState(document)
    initialState --> states : initialState
    states -> StateType : INIT
    StateType --> states : INIT

    states -> draft : Draft(document)
    draft --> states : draft
    states -> StateType : DRAFT
    StateType --> states : DRAFT

    states -> moderation : Moderation(document)
    moderation --> states : moderation
    states -> StateType : MODERATION
    StateType --> states : MODERATION

    states -> published : Published(document)
    published --> states : published
    states -> StateType : PUBLISHED
    StateType --> states : PUBLISHED

    document -> states : getDraftState()
    states --> document : _currentState

    document -> states : getInitialState()
    states --> document : _previousState

    document -> transition : Transition(_previousState, _currentState)
    transition --> document : _transition

    document --> Client : document

    Client -> document : whoIsPublishingDocument()
    document -> document : getCurrentUser()
    document --> Client : user

    Client -> document : getTransitionDetails()
    document -> State : _previousState.getTransitionType()
    State -> document : TransitionType
    document -> transition
    transition --> document
    document --> Client : string
end

group publish
    Client -> document : publish()
    document -> State : publish()
    State -> TransitionType : PUBLISH
    TransitionType --> State : transitionType = PUBLISH
    State -> draft : publishImplementation()
    draft -> document : getCurrentUser()
    document -> user : isAdmin()
    user --> draft : bool
    draft -> State : getDocument()

    alt from Draft state
        alt isAdmin
            State -> document : changeStateTo(published)
            document -> transition : Transition(draft, published)
        else
            State -> document : changeStateTo(moderation)
            document -> transition : Transition(draft, moderation)
        end
    else from Moderation state
        alt isAdmin
            State -> document : changeStateTo(published)
            document -> transition : Transition(moderation, published)
        end
    end
    transition --> document : transition

    Client -> document : getTransitionDetails()
    document -> document : getTransitionType()
    document -> transition : toString()
    transition --> document : string
    document --> Client : string
end

group return document after review
    Client -> document : returnDocAfterReview()
    document -> State : returnDocAfterReview()
    State -> TransitionType : RETURN_DOC_AFTER_REVIEW
    TransitionType --> State : transitionType = RETURN_DOC_AFTER_REVIEW
    State -> draft : returnDocAfterReviewImplementation()
    draft -> State : getDocument()

    alt from Moderation state
        State -> document : changeStateTo(draft)
        document -> transition : Transition(moderation, draft)
    end
    transition --> document : transition

    Client -> document : getTransitionDetails()
    document -> document : getTransitionType()
    document -> transition : toString()
    transition --> document : string
    document --> Client : string
end

group change user for admin
    Client -> UserRole : ADMIN
    UserRole --> Client : ADMIN
    Client -> user : User(ADMIN)
    user -> Client : admin

    Client -> document : changeUser(admin)

    Client -> document : whoIsPublishingDocument()
    document -> document : getCurrentUser()
    document --> Client : admin
end

group expire
    Client -> document : expire()
    document -> State : expire()
    State -> TransitionType : EXPIRE
    TransitionType --> State : transitionType = EXPIRE
    State -> draft : publishImplementation()
    draft -> document : getCurrentUser()
    document -> user : isAdmin()
    user --> draft : bool
    draft -> State : getDocument()

    alt from Published state
        State -> document : changeStateTo(published)
        document -> transition : Transition(published, draft)
    end
    transition --> document : transition

    Client -> document : getTransitionDetails()
    document -> document : getTransitionType()
    document -> transition : toString()
    transition --> document : string
    document --> Client : string
end

@enduml

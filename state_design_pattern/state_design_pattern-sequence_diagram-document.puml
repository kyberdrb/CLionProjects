@startuml
'https://plantuml.com/sequence-diagram

'autonumber

group create_regular_user
    Client -> user: User()
    user --> Client: user
end

group initialize_state_machine
    Client -> document: Document(user)
    document -> draft: Draft(document)
    draft -> State: State(document)
    draft -> document: state
    document --> Client: document
end

group transition: send_document_to_review_as_user
    Client -> document: publish()
    document -> State: publish()
    State -> draft: publish()
    draft -> moderation: Moderation(document)
    draft -> document: changeState(moderation)
end

group transition: return_document_to_user_after_failed_review
    Client -> document: returnDocAfterReview()
    document -> State: returnDocAfterReview()
    State -> moderation: returnDocAfterReview()
    moderation -> draft: Draft(document)
    moderation -> document: changeState(draft)
end

group transition: send_document_to_review_again_as_user
    Client -> document: publish()
    document -> State: publish()
    State -> draft: publish()
    draft -> moderation: Moderation(document)
    draft -> document: changeState(moderation)
end

group transition: publish_reviewed_document_as_user
    Client -> document: publish()
    document -> State: publish()
    State -> moderation: publish()
    moderation -> moderation: Moderation(document)
    moderation -> document: changeState(moderation)
end

' PUBLISHING DOCUMENT AS ADMIN
group transition: admin_continues_to_publish_document
    Client -> document: publish()
    document -> State: publish()
    State -> moderation: publish()
    moderation -> published: Published(document)
    moderation -> document: changeState(published)
end

group transition: document_validity_expired
    Client -> document: expire()
    document -> State: expire()
    State -> published: expire()
    published -> draft: Draft(document)
    published -> document: changeState(draft)
end

group transition: publish_expired_document_again_in_later_deadline
    Client -> document: publish()
    document -> State: publish()
    State -> draft: publish()
    draft -> published: Published(document)
    draft -> document: changeState(published)

    Client -> document: publish()
    document -> State: publish()
    State -> published: publish()
    published -> published: Published(document)
    published -> document: changeState(published)
end

@enduml
